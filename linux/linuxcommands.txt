Basic commands

$ cd ~ -- takes to user home directory
$ cd / -- takes to root
$ pwd -- Print working directory
$ ls -- list everything inside directory
$ ls -l -- list in line
$ ls -la -- list in line including hidden files
$ touch somefile.txt -- create file
$ cat somefile.txt -- open file
$ nano file1.txt -- open files to edit
$ gedit ~/.bashrc -- open the file edit mode
$ mkdir dir1 -- create directory
$ mv somefile.txt dir1 -- move file to a directory
$ cp somefile.txt somefilecopy.txt -- copy the file to another file
$ rm somefile.txt -- remove file
$ rmdir dir1 -- remove directory
$ rm -r dir1 -- remove everything inside the directory
$ man rm -- documentation for any command
$ ln -r file1 file1link -- establish link to a file
$ head file1.txt -- print top few lines
$ tail file1.txt -- print last few lines
$ tail -f file1.txt -- Follow the last lines on the file
$ w -- which user is sitting in the system
$ grep mkdir linuxcommands.txt
$ tree Documents -- This command will edisplay the folder contents in tree
$ which bash -- locate a command
$ script myscript.log -- will start the script recording/ exit with 'exit' command
$ alias gp='git push' -- this command will set aliases for commands.
$ unalias gp -- to unalias
$ lsof -- gives list of all open files
$ lsof -i :80 -- which processes are listening to port 80

Piping, Chaining, Directing Output and Input

$ top -- top processessuiBa
$ ps aux -- list
$ ps aux | less -- list processes with pagenationd
$ ps aux | grep nginx
$ ls linuxcommands.txt && echo 'Superb success' -- chaining commands
$ echo 'Incredible india' 1> file1.txt -- overwrite file with text
$ echo 'Fascinating India' 1>> file1.txt -- append lines to file 0 - stdin 1 - stdout 2 - stderr

Installation and searching

$ sudo apt-get update -- just update all softwares
$ sudo ap-get upgrades -- just upgrade all softwares
$ apt-cache search tmux -- searches for software
$ sudo apt-get install tmux -- install software
$ sudo apt-get remove tmux -- to uninstall software
$ sudo add-apt-repository ppa:xxx/emacs
$ sudo apt-get install emacs -- install emacs
$ sudo add-apt-repository ppa:librecad-dev/librecad-daily -- add repository to linux
$ sudo add-apt-repository -r ppa:librecad-dev/librecad-daily -- remove repository from linux
file permissions and users

drwxrwxr-x  --  d - directory/File r- read, w - write , x - execute
drwx - Owner rights
rwx  - owner groups rights
r-x  - other rights
chmod - 7 - rwx , 6 - rw- , 5 - r-x, 4 - r--, 3 - -wx, 2 - -w-, 1 - --x, 0 - ---
$ chmod 777 -- Owner rights/owner group rights/other's rights
$ chown owner:group -- to change the owner and group of the files/directories
$ chmod +x bashsh1.sh -- add execution permission to the file

$ sudo root -i  -- This is to help login as root
$ less /etc/shadow -- displays the last few lines of the file
$ adduser rk -- adds user and asks for a password.
$ gpasswd -a rk sudo-- adds user to super user group sudo
$ useradd ravi - add user
$ userdel - delete user
$ useradd -m -d /home/soujanya -s /bin/bash soujanya - adds user soujanya
            creates a folder for soujanya , defines default shell and default
            user.
$ passwd soujanya -- to set passwd for new user
$ usermod -L soujanya -- to lock the account
$ usermod -U soujanya -- to unlock the account
$ tail /etc/shadow    -- shows if the user is locked or not. If '!' is present
      before the passwd the account is locked.
$ su - user2 -- switches to second user after taking passwd

Processes

$ kill -l -- lists all commands to kill processes
States of processes
running - process that is running
sleeping - process that is sleeping and waiting to be started
stopped - process that is stopped
zombie - process that has completed execution but waiting to finish.
$ df -ah - gives a view of system disk space usage.

Linux File system

$ ls /bin -- Commands ship with basic OS
$ ls /etc -- Configuration files for the base system and all the software
$ ls /boot --core linux files like kernel files
$ ls /dev -- related to dev like printers / hard disks etc
$ ls /tmp -- contains all temporary files
$ ls /proc -- process related folder
$ ls /home -- All the home files
$ ls /lib  -- place where all the libraries are available

crontab

$ crontab -l -- to open a crontab if jobs are already scheduled
$ crontab -e -- to open in editor if the user does not have defined cronjobs

Archiving
$ tar -zcvf git.tar.gz git/
$ tar -zxf commands.tar.gz

Bash

$ echo 'Hello India' > bashout1.txt -- push the output to a file
$ (echo 'Hello world' | wc -l) && (echo 'sucess')
$ echo $HOME -- Anything preceded by $ is a variable in bash
$ var1='India' -- assignment of a variable , dont leave spaces
$ var2=20 -- assignment of a number to a variable , dont leave spaces
$ echo " i am $var2 years old" -- replaces $var2 with the variable, ensure double quotes
$ echo "There are `wc -l < /etc/group` lines available" -- Anything inside ` ` is a command.
$ ./bashsh1.sh -- executes the bash script
$ source bashsh1.sh -- Executes the script as well as sources the variables into shell
$ ./basharguments.sh ravi kiran india -- this is the way to pass   into bash script

monitoring
$ sudo apt-get install monit

Deploying flask application to the cloud
$ adduser rk -- adds new user / will ask to setup passwd as well
$ gpasswd -a rk sudo -- adds the new user to the super user user group.
$ ssh root@ip -- ssh into server as root
$ ssh rk@ip -- this will ssh into the server with rk as user
$ ssh-keygen -- this will generate the private key
$ mkdir .ssh -- Make ssh directory
$ chmod 700 .ssh -- to ensure that only author can read/execute
$ nano .ssh/authorized_keys -- to open editor and paste the public key, The public is available in .ssh folder
